{"version":3,"sources":["assets/Hand.svg","assets/Menu.svg","assets/Close.svg","assets/current_question.svg","assets/inactive_question.svg","assets/Button.svg","pages/StartGame/StartGame.styles.ts","pages/GameOver/GameOver.styles.ts","pages/StartGame/StartGame.view.tsx","pages/StartGame/index.ts","components/HiddenButton/HiddenButton.styles.ts","components/HiddenButton/index.ts","components/HiddenButton/HiddenButton.view.tsx","pages/Game/Game.styles.ts","components/Step/Step.styles.ts","components/Step/index.ts","components/Step/Step.view.tsx","components/AnswerButton/AnswerButton.styles.ts","components/AnswerButton/index.ts","components/AnswerButton/AnswerButton.view.tsx","pages/Game/Game.view.tsx","pages/Game/index.ts","pages/GameOver/GameOver.view.tsx","pages/GameOver/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Background","styled","div","Container","Hand","img","TextContainer","Text","Button","button","DefaultText","text","h1","HandSVG","require","StartGame","onClick","src","Component","Img","HiddenButton","value","Menu","Close","MobileBackground","LeftContainer","ButtonBox","StepContainer","MobileStepContainer","MHiddenButton","MobileContainer","props","color","Step","active","current","inactive","Intl","NumberFormat","style","currency","maximumSignificantDigits","format","Number","Question","AnswerButton","answer","number_answer","CalculateColor","index","number","Game","onAnswer","stepArray","answerArray","numberOfQuestion","question","isMobile","React","useState","openSteps","setOpenSteps","map","key","reverse","GameOver","App","startGame","setStartGame","endGame","setEndGame","backToStart","setBackToStart","setAnswerArray","setQuestion","setStepArray","setNumberOfQuestion","window","innerWidth","setIsMobile","useEffect","autoCollapseSider","smallWindow","addEventListener","removeEventListener","jsonString","questions","answers","step_array","goGame","correct_answer","length","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be14537b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Hand.f7dd51f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Menu.ef9ecc44.svg\";","module.exports = __webpack_public_path__ + \"static/media/Close.60007eb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/current_question.da2d36e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/inactive_question.6eade976.svg\";","module.exports = __webpack_public_path__ + \"static/media/Button.d9fef2b5.svg\";","import styled from 'styled-components';\n\nexport const Background = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-content: center;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(to right bottom, white 50%, #FFF3EB 50%);\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-grow: 1;\n  margin: 0 1rem;\n`;\n\nexport const Hand = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  align-self: center;\n  text-wrap: normal;\n`;\n\nexport const Text = styled.div`\n  display: flex;\n\n  font-weight: 600;\n  font-size: 6vh;\n  line-height: 116%;\n\n  color: #1C1C21;\n  \n  flex: none;\n  order: 0;\n  flex-grow: 0;\n  white-space: pre;\n  padding-bottom: 4rem;\n`;\n","import styled from 'styled-components';\n\nexport const Background = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-content: center;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  height: 4rem;\n  background: #FF8B37;\n  border-radius: 0.875rem;\n  border: unset;\n\n  font-weight: 600;\n  font-size: 1.375rem;\n  line-height: 116%;\n\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  color: #FFFFFF;\n  \n  @media only screen and (min-device-width: 768px) {\n    width: 50%;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-grow: 1;\n  margin: 0 1rem;\n`;\n\nexport const Hand = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  align-self: center;\n  text-wrap: normal;\n`;\n\nexport const DefaultText = styled.text`\n  font-weight: 600;\n  font-size: 2rem;\n  line-height: 116%;\n\n  display: flex;\n  align-self: center;\n  @media only screen and (min-device-width: 768px) {\n    align-self: unset;\n  }\n`;\n\nexport const Text = styled.h1`\n  display: flex;\n\n  font-weight: 600;\n  font-size: 2.5rem;\n  line-height: 116%;\n\n  color: #1C1C21;\n\n  flex: none;\n  order: 0;\n  flex-grow: 0;\n  white-space: pre;\n  align-self: center;\n  \n  @media only screen and (min-device-width: 768px) {\n    align-self: unset;\n  }\n`;\n","import React from 'react';\n\nimport {\n  Hand,\n  Text,\n  Container,\n  Background,\n  TextContainer,\n} from './StartGame.styles';\n\nimport { Button } from '../GameOver/GameOver.styles';\n\nconst HandSVG = require('../../assets/Hand.svg');\n\nconst HeaderText = 'Who wants to be\\n'\n                    + 'a millionaire?';\n\nexport interface StartGameProps {\n  onClick: (e: React.MouseEvent) => void\n}\n\nfunction StartGame({ onClick }: StartGameProps):JSX.Element {\n  return (\n    <Background>\n      <Container>\n        <Hand src={HandSVG} />\n      </Container>\n      <Container>\n        <TextContainer>\n          <Text>\n            {HeaderText}\n          </Text>\n          <Button onClick={onClick}>Start</Button>\n        </TextContainer>\n      </Container>\n    </Background>\n  );\n}\n\nexport default StartGame;\n","import StartGame from './StartGame.view';\n\nexport default StartGame;\n","import styled from 'styled-components';\n\nexport const Component = styled.div`\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  max-width: 100%;\n  max-height: 100%;\n  right: 1rem;\n  top: 1rem;\n`;\n","import HiddenButton from './HiddenButton.view';\n\nexport default HiddenButton;\n","import React from 'react';\n\nimport {\n  Component,\n  Img,\n} from './HiddenButton.styles';\n\nimport Menu from '../../assets/Menu.svg';\nimport Close from '../../assets/Close.svg';\n\nexport interface HiddenButtonProps {\n  value: boolean\n  onClick: (e: boolean) => void\n}\n\nexport default function HiddenButton({\n  value,\n  onClick,\n}: HiddenButtonProps):JSX.Element {\n  return (\n    <Component onClick={():void => onClick(!value)}>\n      <Img src={value ? Menu : Close} />\n    </Component>\n  );\n}\n","import styled from 'styled-components';\nimport HiddenButton from '../../components/HiddenButton';\n\nexport const Background = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: #F5F5F7;\n`;\n\nexport const MobileBackground = styled(Background)`\n  flex-direction: column;\n`;\n\nexport const LeftContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 1rem;\n  width: 70%;\n\n  @media only screen and (max-device-width: 768px) {\n    width: unset;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  flex-direction: row;\n  flex-wrap: wrap;\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nexport const DefaultText = styled.h1`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  margin-left: 4rem;\n  margin-top: 10rem;\n\n  font-weight: 600;\n  font-size: 2rem;\n  line-height: 116%;\n`;\n\nexport const Text = styled.div`\n  font-weight: 600;\n  font-size: 3.5rem;\n  line-height: 116%;\n\n  display: flex;\n\n  color: #1C1C21;\n  flex: none;\n  order: 0;\n  flex-grow: 0;\n  white-space: pre;\n`;\n\nexport const StepContainer = styled.div`\n  display: flex;\n  width: 30%;\n  flex-direction: column;\n  text-align: center;\n  justify-content: center;\n  background: #FFFFFF;\n`;\n\nexport const MobileStepContainer = styled(StepContainer)`\n  width: 100%;\n  height: 100%;\n  padding-top: 3rem;\n`;\n\nexport const MHiddenButton = styled(HiddenButton)`\n  position: absolute;\n  align-self: end;\n  width: 100%;\n  right: 0;\n  top: 0;\n`;\n\nexport const MobileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components';\n\nexport const Component = styled.div`\n`;\n\nexport const Text = styled.div<{color: string}>`\n  position: relative;\n  max-width: 100%;\n  max-height: 100%;\n  top: calc(-50% - (1.25rem/4));\n  //top: calc(-50% - 23px/2 - 0.5px);\n  font-family: Inter,serif;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 1.25rem;\n  line-height: 116%;\n  color: ${(props):string => (props.color)}\n`;\n\nexport const Img = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  margin: -3%;\n`;\n","import Step from './Step.view';\n\nexport default Step;\n","import React from 'react';\n\nimport {\n  Component,\n  Text,\n  Img,\n} from './Step.styles';\n\nimport current from '../../assets/current_question.svg';\nimport inactive from '../../assets/inactive_question.svg';\n\nexport interface StepProps {\n  value: number\n  active: boolean\n  color: string\n}\n\nexport default function Step({ value, active, color }: StepProps):JSX.Element {\n  return (\n    <Component>\n      {active ? <Img src={current} /> : <Img src={inactive} />}\n      <Text color={color}>\n        {new Intl.NumberFormat('en-US', {\n          style: 'currency',\n          currency: 'USD',\n          maximumSignificantDigits: 1,\n        }).format(value)}\n      </Text>\n    </Component>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Component = styled.div`\n  padding-bottom: 1rem;\n`;\n\nexport const Img = styled.img`\n  position: fixed;\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nexport const Text = styled.div`\n  position: relative;\n  width: 50%;\n  font-size: 1.25rem;\n  line-height: 116%;\n  color: #D0D0D8;\n  padding-bottom: 7%;\n  display: flex;\n  justify-content: center;\n  padding-top: 1rem;\n`;\n\nexport const Number = styled.text`\n  color: #FF8B37;\n`;\n\nexport const Question = styled.text`\n  padding-left: 1rem;\n`;\n","import AnswerButton from './AnswerButton.view';\n\nexport default AnswerButton;\n","import React from 'react';\n\nimport {\n  Component,\n  Text,\n  Img,\n  Number,\n  Question,\n} from './AnswerButton.styles';\n\nimport button from '../../assets/Button.svg';\n\nexport interface AnswerButtonProps {\n  answer: string\n  number_answer: number\n  onClick: (e: number) => void\n}\n\nexport default function AnswerButton({\n  answer,\n  number_answer,\n  onClick,\n}: AnswerButtonProps):JSX.Element {\n  return (\n    <Component onClick={():void => onClick(number_answer)}>\n      <Img src={button} />\n      <Text>\n        <Number>{number_answer + 1}</Number>\n        <Question>{answer}</Question>\n      </Text>\n    </Component>\n  );\n}\n","import React from 'react';\n\nimport {\n  MobileContainer,\n  MHiddenButton,\n  LeftContainer,\n  Background,\n  StepContainer,\n  DefaultText,\n  ButtonBox,\n  MobileBackground,\n  MobileStepContainer,\n} from './Game.styles';\n\nimport Step from '../../components/Step';\nimport AnswerButton from '../../components/AnswerButton';\n\nexport interface StartGameProps {\n  onAnswer: (e: number) => void\n  answerArray?: string[]\n  stepArray?: number[]\n  numberOfQuestion: number\n  question?: string\n  isMobile: boolean\n}\n\nconst CalculateColor = (index: number, number: number):string => {\n  const retColor = '1C1C21';\n\n  if (index === number) return '#FF8B37';\n  if (index <= number) return '#D0D0D8';\n  return (retColor);\n};\n\nfunction Game({\n  onAnswer,\n  stepArray,\n  answerArray,\n  numberOfQuestion,\n  question,\n  isMobile,\n}: StartGameProps):JSX.Element {\n  const [openSteps, setOpenSteps] = React.useState<boolean>(true);\n\n  return (\n    <>\n      {isMobile\n        ? (\n          <MobileBackground>\n            <MHiddenButton onClick={setOpenSteps} value={openSteps} />\n            {openSteps\n              ? (\n                <MobileContainer>\n                  <DefaultText>{question}</DefaultText>\n                  <ButtonBox>\n                    {answerArray?.map((value, index):JSX.Element => (\n                      <AnswerButton\n                        key={value + index}\n                        onClick={onAnswer}\n                        answer={value}\n                        number_answer={index}\n                      />\n                    ))}\n                  </ButtonBox>\n                </MobileContainer>\n              ) : (\n                <MobileStepContainer>\n                  {stepArray?.map((value, index):JSX.Element => (\n                    <Step\n                      key={value + index}\n                      value={value}\n                      active={numberOfQuestion === index}\n                      color={CalculateColor(index, numberOfQuestion)}\n                    />\n                  )).reverse()}\n                </MobileStepContainer>\n              )}\n          </MobileBackground>\n        )\n        : (\n          <Background>\n            <LeftContainer>\n              <DefaultText>{question}</DefaultText>\n              <ButtonBox>\n                {answerArray?.map((value, index):JSX.Element => (\n                  <AnswerButton\n                    key={value + index}\n                    onClick={onAnswer}\n                    answer={value}\n                    number_answer={index}\n                  />\n                ))}\n              </ButtonBox>\n            </LeftContainer>\n            <StepContainer>\n              {stepArray?.map((value, index):JSX.Element => (\n                <Step\n                  key={value + index}\n                  value={value}\n                  active={numberOfQuestion === index}\n                  color={CalculateColor(index, numberOfQuestion)}\n                />\n              )).reverse()}\n            </StepContainer>\n          </Background>\n        )}\n    </>\n  );\n}\n\nexport default Game;\n","import Game from './Game.view';\n\nexport default Game;\n","import React from 'react';\n\nimport {\n  Button,\n  Hand,\n  Text,\n  Container,\n  Background,\n  DefaultText,\n  TextContainer,\n} from './GameOver.styles';\n\nconst HandSVG = require('../../assets/Hand.svg');\n\nexport interface StartGameProps {\n  onClick: (e: React.MouseEvent) => void\n  value: number\n}\n\nfunction GameOver({ value, onClick }: StartGameProps):JSX.Element {\n  return (\n    <Background>\n      <Container>\n        <Hand src={HandSVG} />\n      </Container>\n      <Container>\n        <TextContainer>\n          <DefaultText>\n            Total score:\n          </DefaultText>\n          <Text>\n            {new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: 'USD',\n              maximumSignificantDigits: 1,\n            }).format(value)}\n            {' earned'}\n          </Text>\n          <Button onClick={onClick}>Try again</Button>\n        </TextContainer>\n      </Container>\n    </Background>\n  );\n}\n\nexport default GameOver;\n","import GameOver from './GameOver.view';\n\nexport default GameOver;\n","import React from 'react';\nimport './App.css';\nimport StartGame from './pages/StartGame';\nimport Game from './pages/Game';\nimport GameOver from './pages/GameOver';\nimport jsonString from './data/questions_and_answers.json';\n\nfunction App():JSX.Element {\n  const [startGame, setStartGame] = React.useState(false);\n  const [endGame, setEndGame] = React.useState(false);\n  const [backToStart, setBackToStart] = React.useState(true);\n\n  const [answerArray, setAnswerArray] = React.useState<string[] | undefined>([]);\n  const [question, setQuestion] = React.useState<string | undefined>(' ');\n  const [stepArray, setStepArray] = React.useState<number[] | undefined>([]);\n  const [numberOfQuestion, setNumberOfQuestion] = React.useState<number>(0);\n\n  const [isMobile, setIsMobile] = React.useState(window.innerWidth < 900);\n\n  const goGame = (): void => {\n    setNumberOfQuestion(0);\n    setAnswerArray(jsonString?.[0].questions?.[0].answers);\n    setStepArray(jsonString[1].step_array);\n    setQuestion(jsonString?.[0].questions?.[0].question);\n  };\n\n  const onStartGame = (): void => {\n    setEndGame(true);\n    setStartGame(false);\n    setBackToStart(false);\n    goGame();\n  };\n\n  const onEndGame = (): void => {\n    setEndGame(false);\n    setStartGame(true);\n    setBackToStart(false);\n  };\n\n  const onBackGame = (): void => {\n    setEndGame(false);\n    setStartGame(false);\n    setBackToStart(true);\n  };\n\n  const nextQuestion = (value: number): void => {\n    if (value === jsonString[0]?.questions?.[numberOfQuestion].correct_answer\n      && jsonString[0]?.questions?.length > numberOfQuestion + 1) {\n      setAnswerArray(jsonString[0].questions[numberOfQuestion + 1].answers);\n      setNumberOfQuestion(numberOfQuestion + 1);\n      setQuestion(jsonString[0]?.questions[numberOfQuestion + 1]?.question || '');\n    } else { onEndGame(); }\n  };\n\n  React.useEffect(() => {\n    const autoCollapseSider = (): void => {\n      const smallWindow = window.innerWidth < 900;\n      setIsMobile(smallWindow);\n    };\n\n    window.addEventListener('resize', autoCollapseSider);\n    return ():void => {\n      window.removeEventListener('resize', autoCollapseSider);\n    };\n  }, []);\n\n  return (\n    <>\n      {backToStart && <StartGame onClick={onStartGame} />}\n      {endGame\n      && (\n        <Game\n          onAnswer={nextQuestion}\n          answerArray={answerArray}\n          numberOfQuestion={numberOfQuestion}\n          stepArray={stepArray}\n          question={question}\n          isMobile={isMobile}\n        />\n      )}\n      {startGame\n      && (\n      <GameOver\n        value={jsonString[1]?.step_array?.[numberOfQuestion - 1] || 0}\n        onClick={onBackGame}\n      />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}